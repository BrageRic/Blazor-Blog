@using Microsoft.AspNetCore.SignalR.Client
@inject SignalRService SignalRService
@implements IAsyncDisposable

@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<hr>
<div class="form-group">
    <input @bind="messageInput" size="50" />
</div>
<button @onclick="Send" disabled="@(!IsConnected)">Send</button>

@code {
    private int currentCount = 0;
    private List<string> messages = new List<string>();
    private string? messageInput;

    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task Send()
    {
        if (SignalRService.HubConnection is not null)
        {
            await SignalRService.HubConnection.SendAsync("SendMessage", messageInput);
        }
    }

    public bool IsConnected =>
        SignalRService.HubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (SignalRService.HubConnection is not null)
        {
            await SignalRService.HubConnection.DisposeAsync();
        }
    }
}